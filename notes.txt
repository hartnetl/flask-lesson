Python expeccts templates to be in a folder called template at the same level as the app

{{ These brackets }} has the output which is output on the screen, or elsewhere
{% These ones %} control the flow, so for loops, if statements, base templates etc.

block content -> content can be any word

bootstrap url
wget https://github.com/StartBootstrap/startbootstrap-clean-blog/archive/refs/tags/v5.0.10.zip

https://github.com/startbootstrap/startbootstrap-clean-blog/archive/gh-pages.zip

INSTALLING THE THEME

In the terminal:
    mkdir static                    //makes directory and calls it static. It used to be 'assets'
    cd static 
    wget https://github.com/startbootstrap/startbootstrap-clean-blog/archive/gh-pages.zip
    ls 
    unzip fileName


TESTING FORM DATA

    In your python terminal you get code 404 / 405 if form isn't working
    When you input data and get 200 as a return for your post in the terminal it works

FLASH MESSAGES NEED A SECRET KEY
    creat an env.py file and make your secret key
    Make sure its in your gitignore file


DEPLOY TO HEROKU

    Create a heroku app

    In the terminal type npm install -g HEROKU
    heroku login -i
    heroku apps

    RENAMING HEROKU FILES
        heroku apps:rename this-is-my-new-title -- app the-old-title

    connect git remote to heroku
        Ensure everything is commited
        Go to setting on Heroku site to get git url (https://git.heroku.com/ci-thorin-flask-lesson-example.git)
        In your terminal:
        git remote add heroku https://git.heroku.com/ci-thorin-flask-lesson-example.git
        git remote -v           // To check the heroku link worked
        gitpod /workspace/flask-lesson $ git push -u heroku main
            You'll get an error because there's no requirements.txt

    Create a requirements.txt file
        pip3 freeze --local > requirements.txt
            Now it should work as python was specified

    Make procfile - it tells heroku how to run the application
        echo web: python run.py > Procfile

    When pushed now it will work, but the form doesn't because of the secret key.
        Go to setting on heroku -> config vars
            IP : 0.0.0.0
            PORT : 5000 (we set these at app.run in run.py)
            SECRET_KEY : my_secret_flash_key   (we set this in env.py)



To view most recent app build
    heroku logs --tail --app APP-NAME